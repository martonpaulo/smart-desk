name: Supabase Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      CRON_SECRET: ${{ secrets.CRON_SECRET }}
      SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Link project
        run: supabase link --project-ref "$SUPABASE_PROJECT_REF" --password "$SUPABASE_DB_PASSWORD"

      - name: Sync project secrets
        run: |
          supabase secrets set \
            "SUPABASE_URL=$SUPABASE_URL" \
            "SUPABASE_SERVICE_ROLE_KEY=$SUPABASE_SERVICE_ROLE_KEY" \
            "CRON_SECRET=$CRON_SECRET" \
            --project-ref "$SUPABASE_PROJECT_REF"

      - name: Apply migrations
        run: supabase db push --yes

      - name: Deploy all edge functions
        run: |
          set -e
          for fn in $(find supabase/functions -maxdepth 1 -mindepth 1 -type d -printf "%f\n"); do
            echo "Deploying function: $fn"
            supabase functions deploy "$fn" --project-ref "$SUPABASE_PROJECT_REF"
          done

      - name: Upsert schedule for purge-soft-deleted
        run: |
          PROJECT_URL="https://${SUPABASE_PROJECT_REF}.functions.supabase.co"
          supabase db query <<SQL
          select cron.schedule(
            'daily-purge',           -- job name (re-used = update)
            '0 0 * * *',             -- every day at 00:00
            $$
            select net.http_post(
              url    := '${PROJECT_URL}/purge-soft-deleted',
              headers:= jsonb_build_object(
                'Content-Type','application/json',
                'x-cron-secret','${CRON_SECRET}'
              ),
              body   := '{}'::jsonb
            );
            $$
          );
          SQL
